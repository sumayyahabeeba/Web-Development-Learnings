*{
    margin: 0;
    padding: 0;
}
.box{
    height: 433px;
    width: 80vw;
    padding: 3px;
    margin: 3px;
    border: 2px solid black;
}
.box1{
    background-color: rgb(179, 242, 242);
    /* to bring box1 over the box2 we use z-index. and z-index can be any value > 0 */
    /* position: relative;
    z-index: 1; */

    position: absolute;
    top: 0px;
    left: 3px;
    /* postion: absolute is relative to it's nearest positioned(not static) ancestor in our case it is the html itself(par dada)*/

    /* position: sticky; */
    /* eg: nav bar */
    /* top: 0px; top is very important to specify otherwise it won;t work
    height: 111px;
    width: 100%;
    margin: 0;
    padding: 0; */
    /* now the basic difference between fixed and sticky is that, sticky will behave like normal static until we scroll it over. but fixed will be fixed in it's place even before we scroll it. you may try it out and see the difference. */
}
.box2{
    background-color: blue;
    /* position of any css element is static by default and to set top,right,left and z-index,only if we change the position from static  */
    /* position: relative;   
    top: -50px;
    left: 30px; */
    /* either we use top or bottom but not both at once */
}
.box3{
    background-color: aquamarine;
    /* position: fixed; */
    /* it won't move even if we scroll the page eg: ads */
    /* bottom: 0px;
    left: 8vw;
    height: 110px; */
    /* make sure that the .box styles are placed before .box3 styles*/
}
.box4{
    background-color: palevioletred;   
}
.parent{
    padding: 43px;
    margin: 34px;
    border: 3px solid purple;
    /* NOTE: Exception!!! */
    /* transform, filter or perspective properties can also make an element appear as positioned */
    /* position: relative; */
    /* filter: invert(0); */
    /* inverts the color if 0 is not given*/
    /* transform: translate(0); */
    perspective: 0em;

}

/* whose z-index value will be highest will come over those with less value */